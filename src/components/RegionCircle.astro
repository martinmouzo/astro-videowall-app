---
// Supports weights 300-700
import '@fontsource-variable/quicksand';
import { Icon } from 'astro-icon/components'
import IndicatorList from './IndicatorList.astro';
import RegionSummary from './RegionSummary.astro';
import UpdateIndicator from './UpdateIndicator.astro';
import indicadoresData from '../mocks/data/indicadores.json';

export interface Props {
  id: string;
  name: string;
  mapPosition: { // Viene de la propiedad 'circle' del objeto 'regions'
    cx: number;
    cy: number;
    r: number; // Radio para el círculo visual del overlay
  };
  viewBoxWidth: number;  // Ancho del viewBox del SVG principal
  viewBoxHeight: number; // Alto del viewBox del SVG principal
}

const { id, name, mapPosition, viewBoxWidth, viewBoxHeight } = Astro.props;

// Convertir coordenadas SVG a porcentajes para el centro del overlay
const centerXPercent = (mapPosition.cx / viewBoxWidth) * 100;
const centerYPercent = (mapPosition.cy / viewBoxHeight) * 100;

// Usar el radio para definir el tamaño del overlay.
// El diámetro como porcentaje del ancho del viewBox del SVG.
const diameterPercentVW = (mapPosition.r * 2 / viewBoxWidth) * 100;

// Get region-specific color for visual theming
const regionColors = {
  america: '#54ccb8',
  europe: '#5e97fe',
  asia: '#605beb'
};
const regionColor = regionColors[id as keyof typeof regionColors] || '#54ccb8';

// Estilo para el contenedor principal del overlay
// Se posiciona absolutamente y se centra usando transform.
// Su tamaño se basa en el radio proporcionado, relativo al ancho del SVG.
const overlayContainerStyle = `
  position: absolute;
  left: ${centerXPercent}%;
  top: ${centerYPercent}%;
  width: ${diameterPercentVW}%;
  aspect-ratio: 1 / 1; /* Para mantener la forma circular si el contenido lo requiere */
  transform: translate(-50%, -50%);
  pointer-events: none; /* El contenedor no bloquea clics, los elementos internos sí pueden */
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%; /* Hace que el contenedor mismo sea un círculo */
  background: linear-gradient(135deg, ${regionColor}20 0%, ${regionColor}40 100%);
  border: 2px solid ${regionColor}60;
  box-shadow:
    rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,
    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px,
    inset 0 0 0 1px ${regionColor}20;
  backdrop-filter: blur(4px);
  z-index: 100; /* Ensure circles are above the SVG map */
  --region-color: ${regionColor};
`;
---

<div style={overlayContainerStyle} id={`overlay-${id}`} class="region-overlay-container">
  {/* El círculo visual ahora es el fondo del div principal.
      Si se quisiera un círculo SVG explícito aquí, se podría añadir,
      pero para un fondo semitransparente, el CSS en el div es más simple. */}

  <div class="overlay-content">
    <div class="overlay-header">
      <h4>{name}</h4>
      <RegionSummary region={id} indicadores={indicadoresData} />
    </div>
    <div class="overlay-body">
      <IndicatorList region={id} indicadores={indicadoresData} />
    </div>
    <div class="overlay-footer">
      <UpdateIndicator frequency={300} />
    </div>
  </div>
</div>

<style>
  .region-overlay-container {
    /* Estilos adicionales si son necesarios más allá del style inline */
    max-width: none; /* Sin restricción de ancho máximo */
    max-height: none; /* Sin restricción de altura máxima */
    z-index: 100; /* Asegurar que esté por encima del mapa */
    box-sizing: border-box;
    pointer-events: none; /* Sin interacciones */
  }

  .overlay-content {
    width: 90%; /* Mantener buen uso del espacio */
    height: 90%; /* Mantener buen uso del espacio */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center; /* Cambiado a center para mejor centrado */
    padding: 4%; /* Mantener padding optimizado */
    box-sizing: border-box;
    pointer-events: auto; /* Permite interacción con el contenido */
    color: white;
    text-align: center;
    font-size: clamp(0.7em, 2.0vmin, 1.0em); /* More balanced font scaling */
    overflow: hidden; /* Evita que el contenido desborde el círculo */
    gap: 0.6em; /* Balanced spacing for medium-sized circles */
  }

  .overlay-header {
    padding: 0.3em 0.4em; /* Aumentado padding para mejor visualización */
    border-radius: 0.25em;
    margin-bottom: 0.4em; /* Aumentado margen */
    width: auto; /* Ajusta al contenido */
    max-width: 100%; /* Ajustado para usar todo el ancho disponible */
    flex-shrink: 0; /* Evita compresión */
  }

  .overlay-header h4 {
    margin: 0;
    font-size: 1.5em; /* Balanced title size for medium circles */
    white-space: pre-wrap; /* Para manejar nombres multilínea */
    font-weight: 700;
    letter-spacing: .1em;
    text-shadow: 1px 1px 2px black;
    font-family: 'Quicksand Variable', sans-serif;
    margin-bottom: 0.35em; /* Balanced margin for medium circles */
  }

  .overlay-body {
    flex-grow: 1; /* Permite que el cuerpo ocupe el espacio restante */
    display: flex;
    align-items: center; /* Centrado vertical */
    justify-content: center;
    width: 100%;
    overflow: hidden;
    padding: 0;
    max-height: calc(100% - 3.5em); /* Adjusted for the new spacing */
  }

  .overlay-footer {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 0.35em; /* Balanced margin for consistency */
    padding-top: 0;
    position: relative;
    flex-shrink: 0; /* Evita compresión */
  }

  /* Media queries para diferentes resoluciones de videowall */
  @container (max-width: 400px) {
    .overlay-content {
      font-size: clamp(0.4em, 1.4vmin, 0.7em);
      padding: 3%;
      gap: 0.2em;
    }

    .overlay-header h4 {
      font-size: 1.1em;
      margin-bottom: 0.1em;
    }

    .overlay-body {
      max-height: calc(100% - 3em);
    }

    .overlay-footer {
      margin-top: 0.1em;
    }
  }

  @container (max-width: 300px) {
    .overlay-content {
      font-size: clamp(0.35em, 1.2vmin, 0.6em);
      padding: 2%;
      gap: 0.1em;
    }

    .overlay-header h4 {
      font-size: 1.0em;
      margin-bottom: 0.05em;
    }
  }

  /* Mejoras para Panel1 con más espacio disponible */
  @container (min-width: 600px) {
    .overlay-content {
      font-size: clamp(0.9em, 2.3vmin, 1.2em); /* More balanced font scaling for larger panels */
      padding: 4.5%; /* Moderate padding increase */
      gap: 0.8em; /* Balanced gap for better spacing */
    }

    .overlay-header h4 {
      font-size: 1.7em; /* More proportional title size */
      margin-bottom: 0.4em; /* Balanced margin */
    }

    .overlay-body {
      max-height: none; /* Sin restricción de altura en paneles grandes */
    }
  }

  /* Additional improvements for very large panels */
  @container (min-width: 1000px) {
    .overlay-content {
      font-size: clamp(1.2em, 2.8vmin, 1.6em); /* Even larger font for very large panels */
      padding: 6%; /* More padding for very large panels */
      gap: 1.2em; /* Maximum gap for optimal spacing */
    }

    .overlay-header h4 {
      font-size: 2.2em; /* Maximum title size for very large panels */
      margin-bottom: 0.6em; /* Maximum margin */
    }
  }
</style>

