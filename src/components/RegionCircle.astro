---
// Supports weights 300-700
import '@fontsource-variable/quicksand';
import { Icon } from 'astro-icon/components'
import IndicatorList from './IndicatorList.astro';
import RegionSummary from './RegionSummary.astro';
import UpdateIndicator from './UpdateIndicator.astro';
import indicadoresData from '../mocks/data/indicadores.json';

export interface Props {
  id: string;
  name: string;
  mapPosition: { // Viene de la propiedad 'circle' del objeto 'regions'
    cx: number;
    cy: number;
    r: number; // Radio para el círculo visual del overlay
  };
  viewBoxWidth: number;  // Ancho del viewBox del SVG principal
  viewBoxHeight: number; // Alto del viewBox del SVG principal
}

const { id, name, mapPosition, viewBoxWidth, viewBoxHeight } = Astro.props;

// Convertir coordenadas SVG a porcentajes para el centro del overlay
const centerXPercent = (mapPosition.cx / viewBoxWidth) * 100;
const centerYPercent = (mapPosition.cy / viewBoxHeight) * 100;

// Usar el radio para definir el tamaño del overlay.
// El diámetro como porcentaje del ancho del viewBox del SVG.
const diameterPercentVW = (mapPosition.r * 2 / viewBoxWidth) * 100;

// Estilo para el contenedor principal del overlay
// Se posiciona absolutamente y se centra usando transform.
// Su tamaño se basa en el radio proporcionado, relativo al ancho del SVG.
const overlayContainerStyle = `
  position: absolute;
  left: ${centerXPercent}%;
  top: ${centerYPercent}%;
  width: ${diameterPercentVW}%;
  aspect-ratio: 1 / 1; /* Para mantener la forma circular si el contenido lo requiere */
  transform: translate(-50%, -50%);
  pointer-events: none; /* El contenedor no bloquea clics, los elementos internos sí pueden */
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%; /* Hace que el contenedor mismo sea un círculo */
  background-color: rgba(0, 0, 0, 0.4); /* Color de fondo semitransparente para el círculo */
  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
`;
---

<div style={overlayContainerStyle} id={`overlay-${id}`} class="region-overlay-container">
  {/* El círculo visual ahora es el fondo del div principal.
      Si se quisiera un círculo SVG explícito aquí, se podría añadir,
      pero para un fondo semitransparente, el CSS en el div es más simple. */}

  <div class="overlay-content">
    <div class="overlay-header">
      <h4>{name}</h4>
      <RegionSummary region={id} indicadores={indicadoresData} />
    </div>
    <div class="overlay-body">
      <IndicatorList region={id} indicadores={indicadoresData} />
    </div>
    <div class="overlay-footer">
      <UpdateIndicator frequency={300} />
    </div>
  </div>
</div>

<style>
  .region-overlay-container {
    /* Estilos adicionales si son necesarios más allá del style inline */
    box-sizing: border-box;
  }

  .overlay-content {
    width: 85%; /* Reducido de 100% a 85% para crear margen interno en el círculo */
    height: 85%; /* Reducido de 100% a 85% para crear margen interno en el círculo */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between; /* Vuelto a space-between para mejor control */
    padding: 8%; /* Aumentado a 8% para compensar el tamaño reducido */
    box-sizing: border-box;
    pointer-events: auto; /* Permite interacción con el contenido */
    color: white;
    text-align: center;
    font-size: clamp(0.5em, 1.8vmin, 0.9em); /* Reducido ligeramente para mejor ajuste */
    overflow: hidden; /* Evita que el contenido desborde el círculo */
    gap: 0.4em; /* Reducido gap para evitar desbordamiento */
  }

  .overlay-header {
    padding: 0.2em 0.4em; /* Reducido padding para optimizar espacio */
    border-radius: 0.25em;
    margin-bottom: 0; /* Eliminado margen ya que usamos gap */
    width: auto; /* Ajusta al contenido */
    max-width: 100%; /* Ajustado para usar todo el ancho disponible */
    flex-shrink: 0; /* Evita compresión */
  }

  .overlay-header h4 {
    margin: 0;
    font-size: 1.5em; /* Aumentado de 1.2em para mejor visibilidad */
    white-space: pre-wrap; /* Para manejar nombres multilínea */
    font-weight: 700;
    letter-spacing: .12em; /* Ligeramente aumentado */
    text-shadow: 1px 1px 2px black;
    font-family: 'Quicksand Variable', sans-serif;
  }

  .overlay-body {
    flex-grow: 1; /* Permite que el cuerpo ocupe el espacio restante */
    display: flex;
    align-items: center; /* Centrado vertical para mejor distribución */
    justify-content: center;
    width: 100%;
    overflow: hidden;
    padding: 0; /* Eliminado padding ya que usamos gap */
  }

  .overlay-footer {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 1.2em; /* Aumentado margen superior para mover más abajo */
    padding-top: 0; /* Eliminado padding superior */
    position: relative;
    flex-shrink: 0; /* Evita compresión */
  }
</style>