---
import Chart from "./Chart.astro";
import "@fontsource-variable/quicksand";

const zaraConnectionsGraphId = "g1415104903.881";
const zaraRequestsGraphId = "g1415105211.11850";
const otherConnectionsGraphId = "g1415105270.14471";
const otherRequestsGraphId = "g1415105344.17916";

const indicatorItems = [
  { label: "COMMERCE" },
  { label: "AKAMAI" },
  { label: "NGINX" },
];

const brandLogos = [
  { src: "/images/logoCadenas.webp", alt: "Cadenasr" },
  // { src: "/images/Massimo_Dutti_Logo.webp", alt: "Massimo Dutti" },
  // { src: "/images/BERSHKA_Logo.webp", alt: "Bershka" },
  // { src: "/images/Stradivarius_Logo.webp", alt: "Stradivarius" },
  // { src: "/images/OYSHO_Logo.webp", alt: "Oysho" },
  // { src: "/images/ZARA_HOME_Logo.webp", alt: "Zara Home" },
];
---

<div class="dashboard-container">
  <!-- ZARA SECTION -->
  <div class="section zara-section">
    <div class="section-body">
      <div class="indicators-panel">
        {
          indicatorItems.map((item) => (
            <div class="indicator-item">
              <span class="indicator-label">{item.label}</span>
              <div class="indicator-dot" />
            </div>
          ))
        }
      </div>
      <div class="charts-section">
        <div class="charts-header-logo">
          <img src="/images/logoZara.webp" alt="ZARA" class="main-brand-logo" />
        </div>
        <div class="charts-panel">
        <div class="chart-block">
          <div class="chart-block-title">CONNECTIONS</div>
          <div class="chart-wrapper">
            <Chart
              graphId={zaraConnectionsGraphId}
              startTime="end-30m"
              height="200px"
              width="800px"
              refreshInterval={60000}
              uniqueId="zara-connections"
              loadingText="Cargando Connections..."
              imageAspectRatio="1400 / 300"
            />
          </div>
        </div>
        <div class="chart-block">
          <div class="chart-block-title">REQUESTS</div>
          <div class="chart-wrapper">
            <Chart
              graphId={zaraRequestsGraphId}
              startTime="end-30m"
              height="200px"
              width="800px"
              refreshInterval={60000}
              uniqueId="zara-requests"
              loadingText="Cargando Requests..."
              imageAspectRatio="1400 / 300"
            />
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- BRAND STRIP -->
  <div class="brand-strip">
    {
      brandLogos.map((logo) => (
        <img src={logo.src} alt={logo.alt} class="strip-logo" />
      ))
    }
  </div>

  <!-- OTHER BRANDS SECTION -->
  <div class="section other-brands-section">
    <div class="section-body">
      <div class="indicators-panel">
        {
          indicatorItems.map((item) => (
            <div class="indicator-item">
              <span class="indicator-label">{item.label}</span>
              <div class="indicator-dot" />
            </div>
          ))
        }
      </div>
      <div class="charts-section">
        <div class="charts-header-logo">
          <!-- Empty header to maintain alignment with Zara section -->
        </div>
        <div class="charts-panel">
          <div class="chart-block">
            <div class="chart-block-title">CONNECTIONS</div>
            <div class="chart-wrapper">
              <Chart
                graphId={otherConnectionsGraphId}
                startTime="end-30m"
                height="200px"
                width="800px"
                refreshInterval={60000}
                uniqueId="other-connections"
                loadingText="Cargando Connections..."
                imageAspectRatio="1400 / 300"
              />
            </div>
          </div>
        <div class="chart-block">
          <div class="chart-block-title">REQUESTS</div>
          <div class="chart-wrapper">
            <Chart
              graphId={otherRequestsGraphId}
              startTime="end-30m"
              height="200px"
              width="800px"
              refreshInterval={60000}
              uniqueId="other-requests"
              loadingText="Cargando Requests..."
              imageAspectRatio="1400 / 300"
            />
          </div>
        </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .dashboard-container {
    display: flex;
    flex-direction: column;
    width: fit-content;
    height: fit-content;
    padding: 15px 2px 8px 15px; /* Further reduced right padding from 8px to 2px */
    gap: 8px; /* Further reduced gap from 10px to 8px */
    box-sizing: border-box;
    font-family: "Quicksand Variable", sans-serif;
    color: #e0e0e0;
  }

  .section {
    display: flex;
    flex-direction: column;
    width: fit-content;
    min-height: 0; /* Important for flex children */
    overflow: hidden; /* Prevent content from breaking layout if too large */
  }

  .section-header-logo {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 1em; /* Adjusted margin */
    padding-left: 165px; /* 120px (indicators-panel width) + 45px (increased gap) */
    box-sizing: border-box;
    min-height: 36px;
    width: fit-content;
  }

  .charts-section {
    display: flex;
    flex-direction: column;
    width: fit-content;
  }

  .charts-header-logo {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 800px; /* Same width as charts */
    margin-bottom: 0.5em; /* Reduced from 1em to 0.5em */
    min-height: 36px;
  }

  .main-brand-logo {
    height: 28px;
    object-fit: contain;
  }

  .section-body {
    display: flex;
    gap: 45px; /* Increased gap from 15px to 45px */
    min-height: 0; /* Important for flex children */
    overflow: hidden; /* Prevent content from breaking layout */
  }

  .indicators-panel {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center; /* Center items for better look */
    flex-basis: 120px;
    padding-right: 15px;
    flex-shrink: 0;
    box-sizing: border-box;
  }

  .indicator-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    width: 100%;
  }

  .indicator-label {
    font-size: 1.2em; /* Slightly adjusted */
    font-weight: bold;
    color: #c0c0c0;
    text-transform: uppercase;
    margin-bottom: 8px;
  }

  .indicator-dot {
    width: 50px; /* Slightly adjusted */
    height: 50px; /* Slightly adjusted */
    margin-top: 0.5em; /* Adjusted */
    background-color: #6db53e;
    border-radius: 50%;
    box-shadow: 0 0 10px rgba(109, 181, 62, 0.5);
  }

  .charts-panel {
    display: flex;
    flex-direction: column;
    gap: 3px; /* Reduced from 5px to 3px for even tighter spacing */
    min-width: 0; /* Important for flex children */
    min-height: 0; /* Important for flex children */
    width: fit-content;
  }

  .chart-block {
    display: flex;
    flex-direction: column;
    border-radius: 4px;
    overflow: hidden;
    width: fit-content;
    min-height: 0; /* Important for flex children */
    /* background-color: #1e1e1e; Added for context */
  }

  .chart-block-title {
    padding: 8px 16px; /* Reduced padding from 12px to 8px */
    font-size: 1.2em; /* Increased font size */
    letter-spacing: 0.05em;
    font-weight: 600;
    color: #d0d0d0;
    text-align: center;
    text-transform: uppercase;
    flex-shrink: 0; /* Prevent shrinking */
    /* background-color: #2a2a2a; */
  }

  .chart-wrapper {
    position: relative;
    width: fit-content;
    height: fit-content;
    display: inline-block;
    margin: 0;
    padding: 0;
    line-height: 0;
    vertical-align: top; /* Prevent baseline alignment gaps */
    font-size: 0; /* Remove any font-based spacing */
    /* background-color: aliceblue; */
  }

  /* Ensure Chart component has minimal spacing */
  .chart-wrapper > :global(.axinstats-chart-host) {
    display: block;
    margin: 0;
    padding: 0;
    width: fit-content;
    height: fit-content;
    border: none;
    outline: none;
  }

  /* Remove any spacing from the chart image itself */
  .chart-wrapper > :global(.axinstats-chart-host) img {
    display: block;
    margin: 0;
    padding: 0;
    border: none;
    vertical-align: top;
  }

  .brand-strip {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    padding: 8px 16px; /* Reduced padding from 12px to 8px */
    margin: 0.8em 0; /* Reduced margin from 2em to 0.8em */
    width: fit-content;
    /* background-color: #2a2a2a; */
    gap: 20px;
  }

  .strip-logo {
    height: 24px;
    object-fit: contain;
    filter: grayscale(80%) brightness(1.2);
  }
</style>

<script>
  import { gsap } from "gsap";

  function animateIndicatorDots() {
    const indicatorDots = document.querySelectorAll(".indicator-dot");

    console.log("Dots found:", indicatorDots.length); // Debug log

    indicatorDots.forEach((dot, index) => {
      gsap.to(dot, {
        // Estado final de la animación (verde más contrastado)
        backgroundColor: "#4ade80", // Verde más brillante y contrastado
        boxShadow: "0 0 20px rgba(74, 222, 128, 0.7)", // Sombra verde suave pero visible
        duration: 2.0, // Duración más lenta para un parpadeo más leve
        repeat: -1, // Repetir indefinidamente
        yoyo: true, // Alternar entre el estado inicial y el final
        ease: "sine.inOut", // Suavizar el inicio y el final de la animación
        delay: index * 0.4, // Retraso para que cada punto parpadee en secuencia
      });
    });
  }

  // Múltiples formas de inicializar para asegurar que funcione
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", animateIndicatorDots);
  } else {
    // DOM ya está listo, ejecutar inmediatamente
    animateIndicatorDots();
  }

  // También para navegación en Astro
  document.addEventListener("astro:page-load", animateIndicatorDots);
</script>
