---
interface CardStatusProps {
  title: string;
  status: 'green' | 'yellow' | 'orange' | 'red';
  icon: string;
  hasAlert: boolean;
  alertTime?: string;
  affectedServers?: string[];
  size?: 'compact' | 'full';
}
const { title, status, icon, hasAlert, alertTime, affectedServers = [], size = 'compact' } = Astro.props as CardStatusProps;

const statusLabels: Record<CardStatusProps['status'], string> = {
  green: 'OPERATIVO',
  yellow: 'ADVERTENCIA',
  orange: 'MAYOR',
  red: 'CRÍTICO',
};
const statusColors: Record<CardStatusProps['status'], string> = {
  green: '#4ade80',
  yellow: '#fbbf24',
  orange: '#fb923c',
  red: '#ef4444',
};
const getStatusColor = (status: CardStatusProps['status']) => statusColors[status] || '#6b7280';
const getStatusLabel = (status: CardStatusProps['status']) => statusLabels[status] || 'DESCONOCIDO';
---
<div class={`panel3-card ${status} ${hasAlert ? 'has-alert' : ''} ${size}`}
     role="status"
     aria-label={`${title} - Estado: ${getStatusLabel(status)}${hasAlert && alertTime ? ', Tiempo de alerta: ' + alertTime : ''}`}
>
  <div class="panel3-card-header">
    <div class="panel3-status-indicator" style={`background-color: ${getStatusColor(status)}; color: ${getStatusColor(status)}`}>
      {hasAlert && <div class="panel3-pulse-ring" style={`border-color: ${getStatusColor(status)}`}></div>}
    </div>

  </div>
  <div class="panel3-card-body">
    <div class="panel3-card-title">{title}</div>
    <span class={`panel3-status-badge ${status}`}>{getStatusLabel(status)}</span>
  </div>
  {(hasAlert || affectedServers.length > 0 || size === 'full') && (
    <div class="panel3-card-footer">
      {hasAlert && alertTime && (
        <div class="panel3-alert-badge">
          <span class="panel3-alert-icon">⚠</span>
          <span class="alert-time">{alertTime}</span>
        </div>
      )}
      {affectedServers.length > 0 && (
        <div class="panel3-servers-list">
          <div class="servers-label">Servidores afectados:</div>
          {affectedServers.slice(0, 3).map(server => (
            <div class="server-item">{server}</div>
          ))}
          {affectedServers.length > 3 && (
            <div class="server-item more">+{affectedServers.length - 3} más</div>
          )}
        </div>
      )}
    </div>
  )}
</div>

<style>
.panel3-card {
  display: flex;
  flex-direction: column;
  background: rgba(38, 38, 38, 0.9);
  border-radius: 12px;
  border: 1px solid rgba(255, 255, 255, 0.06); /* Even more subtle border */
  box-shadow: 0 4px 12px rgba(0,0,0,0.2), 0 2px 6px rgba(0,0,0,0.15); /* Softer, layered shadow */
  overflow: hidden;
  min-width: 0;
  backdrop-filter: blur(15px);
  position: relative;
  pointer-events: none;
  backface-visibility: hidden;
  transform: translateZ(0);
}

.panel3-card.compact {
  min-height: 130px;
}

.panel3-card.full {
  min-height: 180px;
}

.panel3-card.has-alert {
  animation: cardPulse 2.5s infinite ease-in-out;
}

/* Using left border accent for status colors for a cleaner look */
.panel3-card.green:not(.has-alert) {
  border-left: 3px solid #4ade80;
  /* Removed box-shadow, relying on main card shadow */
}

.panel3-card.yellow {
  border-left: 3px solid #fbbf24;
  /* Removed box-shadow */
}

.panel3-card.orange {
  border-left: 3px solid #fb923c;
  /* Removed box-shadow */
}

.panel3-card.red {
  border-left: 3px solid #ef4444;
  /* Removed box-shadow */
}

.panel3-card-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 8px;
  padding: 10px 12px; /* Adjusted padding */
  background: rgba(255,255,255,0.03); /* Simpler, subtle background */
  border-bottom: 1px solid rgba(255,255,255,0.05); /* Softer border */
  flex-shrink: 0;
}

.panel3-status-indicator {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  position: relative;
  box-shadow: 0 0 10px currentColor, inset 0 1px 1px rgba(255,255,255,0.1); /* Glow + subtle inset */
  flex-shrink: 0;
  background: currentColor;
}

.panel3-pulse-ring {
  position: absolute;
  left: -3px; /* Adjusted for smaller indicator */
  top: -3px;
  width: 26px;
  height: 26px;
  border-radius: 50%;
  border: 1px solid; /* Color set by inline style, animation uses currentColor */
  animation: pulseRing 2.5s infinite ease-out;
  z-index: 0;
}

.panel3-card-body {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 12px 16px;
  flex: 1;
  gap: 8px; /* Adjusted gap */
  text-align: center;
  min-height: 0;
}

.panel3-card-title {
  font-size: 0.9em;
  font-weight: 600; /* Slightly less bold for a cleaner feel */
  color: #e5e7eb; /* Softer white for text */
  text-shadow: 0 1px 2px rgba(0,0,0,0.2); /* Softer text shadow */
  line-height: 1.3;
  margin: 0;
  word-break: break-word;
  hyphens: auto;
}

.panel3-card.compact .panel3-card-title {
  font-size: 0.8em;
  line-height: 1.2;
}

.panel3-status-badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 3px 10px;
  border-radius: 12px;
  font-size: 0.7em;
  font-weight: 500;
  color: #ffffff;
  letter-spacing: 0.2px;
  text-shadow: none;
  box-shadow: 0 1px 3px rgba(0,0,0,0.15); /* Softer shadow */
  border: none;
  min-width: 70px;
}

/* Solid backgrounds for badges, removing individual shadows */
.panel3-status-badge.green {
  background-color: #10b981;
}

.panel3-status-badge.yellow {
  background-color: #f59e0b;
}

.panel3-status-badge.orange {
  background-color: #f97316;
}

.panel3-status-badge.red {
  background-color: #ef4444;
}

.panel3-card-footer {
  display: flex;
  flex-direction: column;
  gap: 6px;
  padding: 8px 12px 10px 12px;
  flex-shrink: 0;
  margin-top: auto;
  width: 100%;
  box-sizing: border-box;
  overflow: hidden;
  border-top: 1px solid rgba(255,255,255,0.05); /* Subtle separator */
}

.panel3-alert-badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 5px;
  background-color: rgba(200, 30, 30, 0.85); /* Refined red */
  color: #fff;
  border-radius: 6px;
  font-size: 0.7em;
  font-weight: 500;
  padding: 3px 7px;
  box-shadow: 0 2px 4px rgba(200,30,30,0.2); /* Simplified shadow */
  border: 1px solid rgba(220, 38, 38, 0.2); /* Softer border */
  width: fit-content;
  align-self: center;
  font-family: 'Roboto Mono Variable', 'Monaco', 'Courier New', monospace;
}

.panel3-alert-icon {
  font-size: 11px;
  animation: alertBlink 1.8s infinite ease-in-out; /* Slightly faster blink */
  line-height: 1;
}

.alert-time {
  font-family: 'Roboto Mono Variable', 'Monaco', 'Courier New', monospace;
  font-weight: 500;
  letter-spacing: 0.2px;
  font-size: 0.8em;
  line-height: 1;
}

.panel3-servers-list {
  background: rgba(25,25,25,0.7); /* Slightly lighter, more integrated */
  border-radius: 4px;
  padding: 6px 8px;
  border: 1px solid rgba(255,255,255,0.06); /* Softer border */
  min-height: fit-content;
  overflow: hidden;
  width: 100%;
  box-sizing: border-box;
}

.servers-label {
  font-size: 0.65em;
  color: #b0b0b0; /* Lighter gray for better readability */
  margin-bottom: 4px;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.25px;
  line-height: 1.2;
}

.server-item {
  font-size: 0.7em;
  color: #dadada; /* Lighter gray */
  padding: 2px 5px;
  margin: 2px 0;
  background: rgba(255,255,255,0.04); /* More subtle background */
  border-radius: 3px;
  font-family: 'Roboto Mono Variable', 'Monaco', 'Courier New', monospace;
  border-left: 2px solid currentColor;
  word-break: break-all;
  overflow-wrap: break-word;
  line-height: 1.3;
  display: block;
  width: calc(100% - 10px);
  max-width: 100%;
  box-sizing: border-box;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.server-item.more {
  color: #fbbf24;
  font-weight: 500;
  border-left-color: #fbbf24;
}

@keyframes pulseRing { /* Animation uses currentColor for border */
  0%, 100% {
    opacity: 0.4;
    transform: scale(1) translateZ(0);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.1) translateZ(0); /* Slightly smaller, more subtle scale */
  }
}

@keyframes cardPulse { /* More subtle pulse, generic alert emphasis */
  0%, 100% {
    /* Use the base card's box-shadow or a slightly less prominent version */
    box-shadow: 0 4px 12px rgba(0,0,0,0.2), 0 2px 6px rgba(0,0,0,0.15);
  }
  50% {
    box-shadow: 0 6px 18px rgba(0,0,0,0.25), /* Slightly larger shadow for pulse */
                0 0 12px rgba(200, 30, 30, 0.25); /* Refined red glow for alert */
  }
}

@keyframes alertBlink {
  0%, 100% { opacity: 0.7; } /* More subtle blink */
  50% { opacity: 1; }
}
</style>
