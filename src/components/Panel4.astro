---
// Panel4.astro - Componente que encapsula el WorldMap para el videowall
import WorldMap from './WorldMap.astro';
---

<div class="panel4-container">
  <WorldMap />
</div>

<script>
  // Script de debugging para Panel4
  document.addEventListener('DOMContentLoaded', () => {
    console.log('üéØ Panel4: DOM cargado');

    // Verificar que el contenedor existe
    const panel4Container = document.querySelector('.panel4-container');
    if (panel4Container) {
      console.log('‚úÖ Panel4: Contenedor encontrado', panel4Container);

      // Monitorear cuando aparezcan las cards de latencia
      const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
          mutation.addedNodes.forEach((node) => {
            if (node.nodeType === 1) {
              const element = node as Element;
              if (element.classList && element.classList.contains('maplibregl-marker')) {
                console.log('üè∑Ô∏è Panel4: Marker detectado', element);
                const countryCard = element.querySelector('.country-card') as HTMLElement;
                if (countryCard) {
                  console.log('üìã Panel4: Country card encontrada', countryCard);
                  // Forzar visibilidad
                  countryCard.style.opacity = '1';
                  countryCard.style.visibility = 'visible';
                  countryCard.style.zIndex = '1000';
                }
              }
            }
          });
        });
      });

      observer.observe(panel4Container, {
        childList: true,
        subtree: true
      });

      // Verificar despu√©s de 5 segundos
      setTimeout(() => {
        const markers = panel4Container.querySelectorAll('.maplibregl-marker');
        const cards = panel4Container.querySelectorAll('.country-card');
        console.log(`üîç Panel4: ${markers.length} markers, ${cards.length} cards encontradas`);

        cards.forEach((card, index) => {
          const htmlCard = card as HTMLElement;
          console.log(`üìã Panel4: Card ${index}:`, {
            opacity: htmlCard.style.opacity,
            visibility: htmlCard.style.visibility,
            zIndex: htmlCard.style.zIndex,
            position: htmlCard.style.position
          });
        });
      }, 5000);
    } else {
      console.error('‚ùå Panel4: Contenedor no encontrado');
    }
  });
</script>

<style>
  .panel4-container {
    width: 100%;
    height: 100%;
    position: relative;
    background: #1E1E1E;
    overflow: visible; /* Permitir que las cards sean visibles fuera del contenedor */
    display: flex;
    flex-direction: column;
  }

  /* Asegurar que el WorldMap se ajuste completamente al panel */
  .panel4-container :global(.world-map-container) {
    width: 100% !important;
    height: 100% !important;
    position: relative !important;
    overflow: visible !important; /* Crucial para mostrar las cards de latencia */
  }

  /* Asegurar que el contenedor del mapa tambi√©n sea visible */
  .panel4-container :global(#world-map) {
    width: 100% !important;
    height: 100% !important;
    overflow: visible !important;
  }

  /* Preservar funcionalidad completa de las cards de latencia */
  .panel4-container :global(.country-card) {
    z-index: 1000 !important;
    pointer-events: none !important;
    position: absolute !important;
    opacity: 1 !important; /* Forzar visibilidad */
    visibility: visible !important; /* Forzar visibilidad */
  }

  /* Mantener visibilidad de todas las animaciones */
  .panel4-container :global(.trace-path),
  .panel4-container :global(.energy-particle),
  .panel4-container :global(.connection-line) {
    z-index: 500 !important;
  }

  /* Asegurar que el pin de Arteixo sea visible */
  .panel4-container :global(.arteixo-label) {
    z-index: 1001 !important;
  }

  /* Asegurar que todos los markers de MapLibre GL sean visibles */
  .panel4-container :global(.maplibregl-marker) {
    z-index: 1000 !important;
    overflow: visible !important;
  }

  /* Asegurar que el canvas del mapa no corte los elementos */
  .panel4-container :global(.maplibregl-canvas-container) {
    overflow: visible !important;
  }

  .panel4-container :global(.maplibregl-map) {
    overflow: visible !important;
  }
</style>
