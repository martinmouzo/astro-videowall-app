---
// Supports weights 100-700
import '@fontsource-variable/roboto-mono';
// Supports weights 100-900
import '@fontsource-variable/inter';
// Supports weights 300-700
import '@fontsource-variable/quicksand';
// Import custom typography configurations
import '../styles/global.css';
import '../styles/typography.css';
// Props for title, etc.
export interface Props {
  title: string;
}
const { title } = Astro.props;


const baseWidth = 3840;
const baseHeight = 2160;
---

<!doctype html>
<html lang="en" style="overflow-x: auto;">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <style
      define:vars={{
        baseWidth: `${baseWidth}px`,
        baseHeight: `${baseHeight}px`,
      }}
    >
      body {
        margin: 0;
        background-color: #1E1E1E;
        color: #fff;
        font-family: 'Inter', sans-serif;
        overflow-x: auto;
        min-width: 100vw;
      }

      :root {
        font-family: 'Inter', sans-serif;
        font-feature-settings:
          "liga" 1,
          "calt" 1;
      }

      @supports (font-variation-settings: normal) {
        :root {
          font-family: InterVariable, sans-serif;
        }
      }

      .videowall-container {
        min-width: var(--baseWidth);
        width: 100vw;
        height: var(--baseHeight);
        overflow-x: auto;
        overflow-y: hidden;
        position: relative;
      }

      /* Simple Fade Transition (Astro uses <ViewTransitions /> or custom CSS) */
      /* For page transitions, consider Astro's View Transitions: https://docs.astro.build/en/guides/view-transitions/ */
      .fade-enter-active,
      .fade-leave-active {
        transition: opacity 0.3s ease;
      }

      .fade-enter-from,
      .fade-leave-to {
        opacity: 0;
      }
    </style>
  </head>
  <body>
    <div class="videowall-container">
      <slot />
      {
        /* This is where page content will be injected, similar to <router-view> */
      }
    </div>

    <script>
      // Minimal initialization for component-specific animations
      console.log('Videowall application initialized');

      // Optional performance monitoring
      if (typeof performance !== 'undefined' && performance.mark) {
        performance.mark('app-init-start');
        setTimeout(() => {
          performance.mark('app-init-end');
          performance.measure('app-initialization', 'app-init-start', 'app-init-end');
        }, 1000);
      }
    </script>
  </body>
</html>
